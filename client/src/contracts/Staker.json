{
  "contractName": "Staker",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "Open",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakingUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "externalAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTimeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Open\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"externalAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"kchn9\",\"kind\":\"dev\",\"methods\":{\"execute()\":{\"details\":\"Emits either StakeSent(address, uint) or Open() events, depends if threshold is exceeded\"},\"stake()\":{\"details\":\"Emits Stake event\"},\"withdraw()\":{\"details\":\"Emits Withdrawal event\"}},\"version\":1},\"userdoc\":{\"events\":{\"Open()\":{\"notice\":\"Emited when users are allowed to withdraw their funds\"},\"Stake(address,uint256)\":{\"notice\":\"Event used to allow dApp frontend keep track of stake changes\"},\"StakeSent(address,uint256)\":{\"notice\":\"Keeps track of sent Stake to external stake-holding contract\"},\"Withdrawal(address,uint256)\":{\"notice\":\"Keeping an eye on withdrawals\"}},\"kind\":\"user\",\"methods\":{\"balances(address)\":{\"notice\":\"Keep track of user balances\"},\"execute()\":{\"notice\":\"Checks if staking time is up, checks if treshold is exceeded - if so it send money to external contract, if not it allow users to withdraw their coins. It may be called only once.\"},\"getBalance()\":{\"notice\":\"Getter for current contract balance - mostly for test purposes\"},\"getTimeLeft()\":{\"notice\":\"Getter to keep eye on how much time left before staking ends - mostly for test purposes\"},\"stake()\":{\"notice\":\"Stakes user funds to this contract balance\"},\"withdraw()\":{\"notice\":\"Allows users to withdraw their funds if staking phase is over\"}},\"notice\":\"Core contract of decentralized staking app, provides basic mechanism of Ether stacking\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ExternalContract.sol\":{\"keccak256\":\"0x0648d2ca642318db6b0f74d82254610b07fb630c43a7fe31e6c851b92b956e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a601416dca553af94efb8d8fd2c687e621f4f38a397722bd0427bdd885b3a4\",\"dweb:/ipfs/QmZMR74aPFpxXfyHDBdtL69WCAZChXJRa2nqQsREh3Vvyh\"]},\"project:/contracts/Staker.sol\":{\"keccak256\":\"0xe57550765f34b3cfa19da3325263efe05d71d763a26ab950865b0a0a97c66360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5be7a15a95491490a0f8b28725205af5ed07e1be04512264b452f15f282dc8a\",\"dweb:/ipfs/Qmc4YBtgCRXUds5ALM5xWHpW3n1EVi8asSEe1ndCLmoUmn\"]}},\"version\":1}",
  "bytecode": "0x6080604052604051610010906100c4565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603c42610079919061010b565b6001556000600360006101000a81548160ff0219169083151502179055506000600360016101000a81548160ff0219169083151502179055503480156100be57600080fd5b50610161565b61011d806200111d83390190565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610116826100d2565b9150610121836100d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610156576101556100dc565b5b828201905092915050565b610fac80620001716000396000f3fe6080604052600436106100595760003560e01c806312065fe01461013857806327e235e3146101635780633a4b66f1146101a05780633ccfd60b146101aa57806361461954146101c1578063c7e284b8146101d857610133565b366101335760015442106100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610934565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100f1919061098d565b925050819055507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a3334604051610129929190610a33565b60405180910390a1005b600080fd5b34801561014457600080fd5b5061014d610203565b60405161015a9190610a5c565b60405180910390f35b34801561016f57600080fd5b5061018a60048036038101906101859190610aa8565b61020b565b6040516101979190610a5c565b60405180910390f35b6101a8610223565b005b3480156101b657600080fd5b506101bf61033b565b005b3480156101cd57600080fd5b506101d6610556565b005b3480156101e457600080fd5b506101ed610888565b6040516101fa9190610a5c565b60405180910390f35b600047905090565b60026020528060005260406000206000915090505481565b6001544210610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610934565b60405180910390fd5b600034116102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a190610b47565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f9919061098d565b925050819055507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a3334604051610331929190610a33565b60405180910390a1565b600360019054906101000a900460ff1661038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610bff565b60405180910390fd5b60003390506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610c6b565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104659190610c8b565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161049290610cf0565b60006040518083038185875af1925050503d80600081146104cf576040519150601f19603f3d011682016040523d82523d6000602084013e6104d4565b606091505b5050905080610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90610d51565b60405180910390fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658383604051610549929190610dd0565b60405180910390a1505050565b60015442101561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290610e6b565b60405180910390fd5b600360009054906101000a900460ff16156105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e290610efd565b60405180910390fd5b670de0b6b3a76400003073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190610f49565b10610823577f0d65baa3f5024928559313e1ead167570a5661a1b3e56fb6a443e8cc8ab5e0cc60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610f49565b604051610727929190610a33565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663522e11773073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da9190610f49565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b5050505050610886565b6001600360016101000a81548160ff0219169083151502179055506001600360006101000a81548160ff0219169083151502179055507f59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a560405160405180910390a15b565b60004260015411156108a957426001546108a29190610c8b565b90506108ae565b600090505b90565b600082825260208201905092915050565b7f5374616b65723a205374616b696e67207068617365206973206f76657220616c60008201527f7265616479000000000000000000000000000000000000000000000000000000602082015250565b600061091e6025836108b1565b9150610929826108c2565b604082019050919050565b6000602082019050818103600083015261094d81610911565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099882610954565b91506109a383610954565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d8576109d761095e565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0e826109e3565b9050919050565b610a1e81610a03565b82525050565b610a2d81610954565b82525050565b6000604082019050610a486000830185610a15565b610a556020830184610a24565b9392505050565b6000602082019050610a716000830184610a24565b92915050565b600080fd5b610a8581610a03565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a77565b5b6000610acc84828501610a93565b91505092915050565b7f5374616b65723a2055736572206973206e6f74207374616b696e6720616e792060008201527f4554480000000000000000000000000000000000000000000000000000000000602082015250565b6000610b316023836108b1565b9150610b3c82610ad5565b604082019050919050565b60006020820190508181036000830152610b6081610b24565b9050919050565b7f5374616b65723a20436f6e7472616374206973206e6f74206f70656e20666f7260008201527f207769746864726177202d207374616b696e6720636f6e74696e756573202f2060208201527f7468726573686f6c642072656163686564000000000000000000000000000000604082015250565b6000610be96051836108b1565b9150610bf482610b67565b606082019050919050565b60006020820190508181036000830152610c1881610bdc565b9050919050565b7f5374616b65723a204e6f2066756e647320746f20776974686472617700000000600082015250565b6000610c55601c836108b1565b9150610c6082610c1f565b602082019050919050565b60006020820190508181036000830152610c8481610c48565b9050919050565b6000610c9682610954565b9150610ca183610954565b925082821015610cb457610cb361095e565b5b828203905092915050565b600081905092915050565b50565b6000610cda600083610cbf565b9150610ce582610cca565b600082019050919050565b6000610cfb82610ccd565b9150819050919050565b7f5374616b65723a205769746864726177206661696c6564000000000000000000600082015250565b6000610d3b6017836108b1565b9150610d4682610d05565b602082019050919050565b60006020820190508181036000830152610d6a81610d2e565b9050919050565b6000819050919050565b6000610d96610d91610d8c846109e3565b610d71565b6109e3565b9050919050565b6000610da882610d7b565b9050919050565b6000610dba82610d9d565b9050919050565b610dca81610daf565b82525050565b6000604082019050610de56000830185610dc1565b610df26020830184610a24565b9392505050565b7f5374616b65723a2054686520646561646c696e65206973206e6f74206f76657260008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b6000610e556024836108b1565b9150610e6082610df9565b604082019050919050565b60006020820190508181036000830152610e8481610e48565b9050919050565b7f5374616b65723a20436f6e747261637420686173206265656e2065786563757460008201527f656420616c726561647900000000000000000000000000000000000000000000602082015250565b6000610ee7602a836108b1565b9150610ef282610e8b565b604082019050919050565b60006020820190508181036000830152610f1681610eda565b9050919050565b610f2681610954565b8114610f3157600080fd5b50565b600081519050610f4381610f1d565b92915050565b600060208284031215610f5f57610f5e610a77565b5b6000610f6d84828501610f34565b9150509291505056fea2646970667358221220783612f09015b598c8fd02d5f5857edc2f1b46cf0a4fe6d4c6d2e24e1d407cc664736f6c634300080d0033608060405234801561001057600080fd5b5060fe8061001f6000396000f3fe60806040526004361060265760003560e01c806312065fe014602b578063522e1177146051575b600080fd5b348015603657600080fd5b50603d6059565b6040516048919060af565b60405180910390f35b60576061565b005b600047905090565b7faaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e734604051608e919060af565b60405180910390a1565b6000819050919050565b60a9816098565b82525050565b600060208201905060c2600083018460a2565b9291505056fea264697066735822122063562bd04092c48191fa1c4756cd83c2e242dd5b354fead84dd5b46e768b064864736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806312065fe01461013857806327e235e3146101635780633a4b66f1146101a05780633ccfd60b146101aa57806361461954146101c1578063c7e284b8146101d857610133565b366101335760015442106100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610934565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100f1919061098d565b925050819055507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a3334604051610129929190610a33565b60405180910390a1005b600080fd5b34801561014457600080fd5b5061014d610203565b60405161015a9190610a5c565b60405180910390f35b34801561016f57600080fd5b5061018a60048036038101906101859190610aa8565b61020b565b6040516101979190610a5c565b60405180910390f35b6101a8610223565b005b3480156101b657600080fd5b506101bf61033b565b005b3480156101cd57600080fd5b506101d6610556565b005b3480156101e457600080fd5b506101ed610888565b6040516101fa9190610a5c565b60405180910390f35b600047905090565b60026020528060005260406000206000915090505481565b6001544210610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610934565b60405180910390fd5b600034116102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a190610b47565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f9919061098d565b925050819055507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a3334604051610331929190610a33565b60405180910390a1565b600360019054906101000a900460ff1661038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610bff565b60405180910390fd5b60003390506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610c6b565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104659190610c8b565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161049290610cf0565b60006040518083038185875af1925050503d80600081146104cf576040519150601f19603f3d011682016040523d82523d6000602084013e6104d4565b606091505b5050905080610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90610d51565b60405180910390fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658383604051610549929190610dd0565b60405180910390a1505050565b60015442101561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290610e6b565b60405180910390fd5b600360009054906101000a900460ff16156105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e290610efd565b60405180910390fd5b670de0b6b3a76400003073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190610f49565b10610823577f0d65baa3f5024928559313e1ead167570a5661a1b3e56fb6a443e8cc8ab5e0cc60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610f49565b604051610727929190610a33565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663522e11773073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da9190610f49565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b5050505050610886565b6001600360016101000a81548160ff0219169083151502179055506001600360006101000a81548160ff0219169083151502179055507f59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a560405160405180910390a15b565b60004260015411156108a957426001546108a29190610c8b565b90506108ae565b600090505b90565b600082825260208201905092915050565b7f5374616b65723a205374616b696e67207068617365206973206f76657220616c60008201527f7265616479000000000000000000000000000000000000000000000000000000602082015250565b600061091e6025836108b1565b9150610929826108c2565b604082019050919050565b6000602082019050818103600083015261094d81610911565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099882610954565b91506109a383610954565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d8576109d761095e565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0e826109e3565b9050919050565b610a1e81610a03565b82525050565b610a2d81610954565b82525050565b6000604082019050610a486000830185610a15565b610a556020830184610a24565b9392505050565b6000602082019050610a716000830184610a24565b92915050565b600080fd5b610a8581610a03565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a77565b5b6000610acc84828501610a93565b91505092915050565b7f5374616b65723a2055736572206973206e6f74207374616b696e6720616e792060008201527f4554480000000000000000000000000000000000000000000000000000000000602082015250565b6000610b316023836108b1565b9150610b3c82610ad5565b604082019050919050565b60006020820190508181036000830152610b6081610b24565b9050919050565b7f5374616b65723a20436f6e7472616374206973206e6f74206f70656e20666f7260008201527f207769746864726177202d207374616b696e6720636f6e74696e756573202f2060208201527f7468726573686f6c642072656163686564000000000000000000000000000000604082015250565b6000610be96051836108b1565b9150610bf482610b67565b606082019050919050565b60006020820190508181036000830152610c1881610bdc565b9050919050565b7f5374616b65723a204e6f2066756e647320746f20776974686472617700000000600082015250565b6000610c55601c836108b1565b9150610c6082610c1f565b602082019050919050565b60006020820190508181036000830152610c8481610c48565b9050919050565b6000610c9682610954565b9150610ca183610954565b925082821015610cb457610cb361095e565b5b828203905092915050565b600081905092915050565b50565b6000610cda600083610cbf565b9150610ce582610cca565b600082019050919050565b6000610cfb82610ccd565b9150819050919050565b7f5374616b65723a205769746864726177206661696c6564000000000000000000600082015250565b6000610d3b6017836108b1565b9150610d4682610d05565b602082019050919050565b60006020820190508181036000830152610d6a81610d2e565b9050919050565b6000819050919050565b6000610d96610d91610d8c846109e3565b610d71565b6109e3565b9050919050565b6000610da882610d7b565b9050919050565b6000610dba82610d9d565b9050919050565b610dca81610daf565b82525050565b6000604082019050610de56000830185610dc1565b610df26020830184610a24565b9392505050565b7f5374616b65723a2054686520646561646c696e65206973206e6f74206f76657260008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b6000610e556024836108b1565b9150610e6082610df9565b604082019050919050565b60006020820190508181036000830152610e8481610e48565b9050919050565b7f5374616b65723a20436f6e747261637420686173206265656e2065786563757460008201527f656420616c726561647900000000000000000000000000000000000000000000602082015250565b6000610ee7602a836108b1565b9150610ef282610e8b565b604082019050919050565b60006020820190508181036000830152610f1681610eda565b9050919050565b610f2681610954565b8114610f3157600080fd5b50565b600081519050610f4381610f1d565b92915050565b600060208284031215610f5f57610f5e610a77565b5b6000610f6d84828501610f34565b9150509291505056fea2646970667358221220783612f09015b598c8fd02d5f5857edc2f1b46cf0a4fe6d4c6d2e24e1d407cc664736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:584:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "320:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "330:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "353:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "335:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "330:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "364:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "387:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "369:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "364:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "527:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "529:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "529:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "529:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "448:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "455:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "523:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "451:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "445:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "442:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "559:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "570:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "573:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "566:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "307:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "310:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "316:3:2",
                "type": ""
              }
            ],
            "src": "276:305:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12803:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "120:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "125:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "113:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "141:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "160:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "165:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "156:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "156:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "141:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "75:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "91:11:2",
                "type": ""
              }
            ],
            "src": "7:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "288:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "306:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a205374616b696e67207068617365206973206f76657220616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "322:34:2",
                        "type": "",
                        "value": "Staker: Staking phase is over al"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "299:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "378:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "386:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:15:2"
                      },
                      {
                        "hexValue": "7265616479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "391:7:2",
                        "type": "",
                        "value": "ready"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "367:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "367:32:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "367:32:2"
                }
              ]
            },
            "name": "store_literal_in_memory_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "280:6:2",
                "type": ""
              }
            ],
            "src": "182:224:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "558:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "568:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "634:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "639:2:2",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "575:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "740:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
                      "nodeType": "YulIdentifier",
                      "src": "651:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "651:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "651:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "753:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "764:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "769:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "753:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "546:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "554:3:2",
                "type": ""
              }
            ],
            "src": "412:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "955:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "965:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "988:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "965:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1012:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1023:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1008:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1008:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1031:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1037:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1027:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1027:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1001:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1001:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1057:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1191:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1065:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1065:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1057:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "935:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "950:4:2",
                "type": ""
              }
            ],
            "src": "784:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1254:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1275:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1264:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1236:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1246:7:2",
                "type": ""
              }
            ],
            "src": "1209:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1337:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1340:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1330:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1330:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1427:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1427:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1427:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1458:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1451:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1451:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1451:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1292:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1522:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1532:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1555:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1537:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1537:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "1532:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1566:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1589:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1571:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1571:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "1566:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1729:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1731:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1731:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1731:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1650:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1657:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1725:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1647:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1647:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1644:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1761:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1772:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1775:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1768:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1768:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1761:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1509:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1512:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1518:3:2",
                "type": ""
              }
            ],
            "src": "1478:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1844:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1859:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1855:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1844:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1816:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1826:7:2",
                "type": ""
              }
            ],
            "src": "1789:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1966:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1976:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2005:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1987:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1976:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1948:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1958:7:2",
                "type": ""
              }
            ],
            "src": "1921:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2088:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2105:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2128:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2110:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2110:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2098:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2098:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2076:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2083:3:2",
                "type": ""
              }
            ],
            "src": "2023:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2212:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2229:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2252:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2234:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2222:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2222:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2200:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2207:3:2",
                "type": ""
              }
            ],
            "src": "2147:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2397:206:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2407:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2419:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2430:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2415:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2407:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2487:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2500:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2511:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2496:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2496:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2443:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2443:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2568:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2581:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2592:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2577:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2524:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2524:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2361:9:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2373:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2381:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2392:4:2",
                "type": ""
              }
            ],
            "src": "2271:332:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2707:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2717:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2729:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2725:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2717:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2797:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2810:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2821:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2806:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2753:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2753:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2679:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2691:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2702:4:2",
                "type": ""
              }
            ],
            "src": "2609:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2877:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2887:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2903:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2897:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2887:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2870:6:2",
                "type": ""
              }
            ],
            "src": "2837:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3007:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3024:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3027:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3017:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3017:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2918:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3130:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3147:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3150:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3140:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3140:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3140:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "3041:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3207:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3264:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3273:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3276:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3266:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3266:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3266:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3230:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3255:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3237:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3237:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3227:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3227:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3220:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3217:63:2"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3200:5:2",
                "type": ""
              }
            ],
            "src": "3164:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3344:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3354:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3376:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3363:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3363:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3354:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3419:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3392:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:33:2"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3322:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3330:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3338:5:2",
                "type": ""
              }
            ],
            "src": "3292:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3503:263:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3549:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3551:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3551:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3551:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3524:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3533:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3520:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3520:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3545:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3516:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3513:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3642:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3657:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3671:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3661:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3686:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3721:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3732:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3717:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3717:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3741:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3696:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3696:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3686:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3473:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3484:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3496:6:2",
                "type": ""
              }
            ],
            "src": "3437:329:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3878:116:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3900:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3908:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3896:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3896:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a2055736572206973206e6f74207374616b696e6720616e7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3912:34:2",
                        "type": "",
                        "value": "Staker: User is not staking any "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3889:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3889:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3968:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3976:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3964:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3964:15:2"
                      },
                      {
                        "hexValue": "455448",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3981:5:2",
                        "type": "",
                        "value": "ETH"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3957:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3957:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3957:30:2"
                }
              ]
            },
            "name": "store_literal_in_memory_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3870:6:2",
                "type": ""
              }
            ],
            "src": "3772:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4146:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4156:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4222:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4227:2:2",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4163:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4163:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4156:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4328:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
                      "nodeType": "YulIdentifier",
                      "src": "4239:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4239:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4341:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4352:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4357:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4348:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4341:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4134:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4142:3:2",
                "type": ""
              }
            ],
            "src": "4000:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4543:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4553:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4565:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4576:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4561:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4553:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4600:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4611:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4596:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4596:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4619:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4625:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4615:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4615:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4589:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4645:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4779:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4653:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4645:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4523:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4538:4:2",
                "type": ""
              }
            ],
            "src": "4372:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4903:199:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4925:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4933:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4921:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e7472616374206973206e6f74206f70656e20666f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4937:34:2",
                        "type": "",
                        "value": "Staker: Contract is not open for"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4914:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4914:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4914:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4993:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5001:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4989:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4989:15:2"
                      },
                      {
                        "hexValue": "207769746864726177202d207374616b696e6720636f6e74696e756573202f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5006:34:2",
                        "type": "",
                        "value": " withdraw - staking continues / "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4982:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4982:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4982:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5062:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5070:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5058:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5058:15:2"
                      },
                      {
                        "hexValue": "7468726573686f6c642072656163686564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5075:19:2",
                        "type": "",
                        "value": "threshold reached"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5051:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:44:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5051:44:2"
                }
              ]
            },
            "name": "store_literal_in_memory_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4895:6:2",
                "type": ""
              }
            ],
            "src": "4797:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5254:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5264:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5330:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5335:2:2",
                        "type": "",
                        "value": "81"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5271:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5271:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5264:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5436:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
                      "nodeType": "YulIdentifier",
                      "src": "5347:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5347:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5347:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5449:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5460:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5465:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5456:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5456:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5449:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5242:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5250:3:2",
                "type": ""
              }
            ],
            "src": "5108:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5651:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5661:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5673:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5684:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5669:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5669:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5661:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5708:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5719:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5704:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5704:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5727:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5733:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5723:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5723:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5697:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5697:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5697:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5753:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5887:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5761:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5761:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5753:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5631:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5646:4:2",
                "type": ""
              }
            ],
            "src": "5480:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6011:72:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6033:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6041:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a204e6f2066756e647320746f207769746864726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6045:30:2",
                        "type": "",
                        "value": "Staker: No funds to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6022:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:54:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6022:54:2"
                }
              ]
            },
            "name": "store_literal_in_memory_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6003:6:2",
                "type": ""
              }
            ],
            "src": "5905:178:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6235:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6245:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6311:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6316:2:2",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6252:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6252:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6245:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6417:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
                      "nodeType": "YulIdentifier",
                      "src": "6328:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6328:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6430:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6441:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6446:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6437:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6437:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6430:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6223:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6231:3:2",
                "type": ""
              }
            ],
            "src": "6089:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6632:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6642:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6654:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6665:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6650:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6650:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6642:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6689:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6700:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6685:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6685:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6708:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6714:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6704:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6704:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6678:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6678:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6678:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6734:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6868:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6742:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6734:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6612:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6627:4:2",
                "type": ""
              }
            ],
            "src": "6461:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6931:146:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6941:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6964:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6946:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6941:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6975:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6998:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6980:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6975:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7022:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7024:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7024:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7024:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7016:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7019:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7013:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7013:8:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7010:34:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7054:17:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7066:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7069:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7062:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7062:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7054:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6917:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6920:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6926:4:2",
                "type": ""
              }
            ],
            "src": "6886:191:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7196:34:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7206:18:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7221:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7206:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7168:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7173:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7184:11:2",
                "type": ""
              }
            ],
            "src": "7083:147:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7342:8:2",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7334:6:2",
                "type": ""
              }
            ],
            "src": "7236:114:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7519:235:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7529:90:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7612:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7617:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7536:75:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:83:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7529:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7717:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "7628:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7628:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7628:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7730:18:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7741:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7746:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7737:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:11:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7730:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7507:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7515:3:2",
                "type": ""
              }
            ],
            "src": "7356:398:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7948:191:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7959:154:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8109:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7966:141:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7966:147:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7959:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8123:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8130:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8123:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7935:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7944:3:2",
                "type": ""
              }
            ],
            "src": "7760:379:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8251:67:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8273:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8281:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8269:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8269:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a205769746864726177206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8285:25:2",
                        "type": "",
                        "value": "Staker: Withdraw failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8262:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8262:49:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8262:49:2"
                }
              ]
            },
            "name": "store_literal_in_memory_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8243:6:2",
                "type": ""
              }
            ],
            "src": "8145:173:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8470:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8480:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8546:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8551:2:2",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8487:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8487:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8480:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8652:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
                      "nodeType": "YulIdentifier",
                      "src": "8563:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8563:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8563:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8665:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8676:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8681:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8672:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8672:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8665:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8458:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8466:3:2",
                "type": ""
              }
            ],
            "src": "8324:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8867:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8877:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8889:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8900:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8885:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8885:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8877:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8924:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8935:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8920:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8920:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8943:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8949:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8939:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8939:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8913:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8913:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8913:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8969:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9103:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8977:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8977:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8969:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8847:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8862:4:2",
                "type": ""
              }
            ],
            "src": "8696:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9153:28:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9163:12:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9170:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9163:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9139:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9149:3:2",
                "type": ""
              }
            ],
            "src": "9121:60:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9247:82:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9257:66:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9315:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "9297:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9297:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9288:8:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9288:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9270:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9270:53:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9257:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9227:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9237:9:2",
                "type": ""
              }
            ],
            "src": "9187:142:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9395:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9405:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9449:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9418:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9405:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9375:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9385:9:2",
                "type": ""
              }
            ],
            "src": "9335:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9535:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9545:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9589:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9558:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9558:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9545:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9515:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9525:9:2",
                "type": ""
              }
            ],
            "src": "9467:134:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9680:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9697:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9741:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9702:38:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9702:45:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9690:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9690:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9690:58:2"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9668:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9675:3:2",
                "type": ""
              }
            ],
            "src": "9607:147:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9894:214:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9904:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9916:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9927:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9912:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9912:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9904:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9992:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10005:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10016:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10001:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10001:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9940:51:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:79:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9940:79:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10073:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10086:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10097:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10082:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10082:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10029:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10029:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10029:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9858:9:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9870:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9878:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9889:4:2",
                "type": ""
              }
            ],
            "src": "9760:348:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10220:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10242:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10250:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10238:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10238:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a2054686520646561646c696e65206973206e6f74206f766572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10254:34:2",
                        "type": "",
                        "value": "Staker: The deadline is not over"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10231:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10231:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10231:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10310:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10318:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10306:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10306:15:2"
                      },
                      {
                        "hexValue": "20796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10323:6:2",
                        "type": "",
                        "value": " yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10299:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10299:31:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10299:31:2"
                }
              ]
            },
            "name": "store_literal_in_memory_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10212:6:2",
                "type": ""
              }
            ],
            "src": "10114:223:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10489:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10499:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10565:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10570:2:2",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10506:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10506:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10499:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10671:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
                      "nodeType": "YulIdentifier",
                      "src": "10582:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10582:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10582:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10684:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10695:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10700:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10691:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10691:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10684:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10477:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10485:3:2",
                "type": ""
              }
            ],
            "src": "10343:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10886:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10896:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10908:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10919:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10904:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10904:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10896:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10943:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10954:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10939:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10939:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10962:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10968:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10958:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10958:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10932:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10932:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10932:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10988:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11122:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10996:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10996:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10988:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10866:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10881:4:2",
                "type": ""
              }
            ],
            "src": "10715:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11246:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11268:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11276:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11264:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11264:14:2"
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e747261637420686173206265656e20657865637574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11280:34:2",
                        "type": "",
                        "value": "Staker: Contract has been execut"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11257:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11257:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11257:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11336:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11344:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11332:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11332:15:2"
                      },
                      {
                        "hexValue": "656420616c7265616479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11349:12:2",
                        "type": "",
                        "value": "ed already"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11325:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11325:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11325:37:2"
                }
              ]
            },
            "name": "store_literal_in_memory_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11238:6:2",
                "type": ""
              }
            ],
            "src": "11140:229:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11521:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11531:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11597:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11602:2:2",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11538:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11538:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11531:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11703:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
                      "nodeType": "YulIdentifier",
                      "src": "11614:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11614:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11614:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11716:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11727:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11732:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11723:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11723:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11716:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11509:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11517:3:2",
                "type": ""
              }
            ],
            "src": "11375:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11918:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11928:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11940:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11951:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11936:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11936:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11928:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11975:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11986:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11971:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11971:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11994:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12000:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11990:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11990:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11964:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11964:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11964:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12020:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12154:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12028:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12028:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12020:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11898:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11913:4:2",
                "type": ""
              }
            ],
            "src": "11747:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12215:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12272:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12281:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12284:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12274:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12274:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12274:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12238:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12263:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "12245:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12245:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12235:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12235:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12228:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12228:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "12225:63:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12208:5:2",
                "type": ""
              }
            ],
            "src": "12172:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12363:80:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12373:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12388:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12382:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12382:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "12373:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12431:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12404:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12404:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "12341:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12349:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12357:5:2",
                "type": ""
              }
            ],
            "src": "12300:143:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12526:274:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12572:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12574:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12574:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12574:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12547:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12556:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12543:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12543:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12568:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12539:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12539:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "12536:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12665:128:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12680:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12694:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12684:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12709:74:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12755:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12766:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12751:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12751:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12775:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12719:31:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12719:64:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12709:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12496:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12507:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12519:6:2",
                "type": ""
              }
            ],
            "src": "12449:351:2"
          }
        ]
      },
      "contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: Staking phase is over al\")\n\n        mstore(add(memPtr, 32), \"ready\")\n\n    }\n\n    function abi_encode_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: User is not staking any \")\n\n        mstore(add(memPtr, 32), \"ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: Contract is not open for\")\n\n        mstore(add(memPtr, 32), \" withdraw - staking continues / \")\n\n        mstore(add(memPtr, 64), \"threshold reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 81)\n        store_literal_in_memory_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: No funds to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: The deadline is not over\")\n\n        mstore(add(memPtr, 32), \" yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staker: Contract has been execut\")\n\n        mstore(add(memPtr, 32), \"ed already\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "206:3888:1:-:0;;;776:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;749:49;;;;;;;;;;;;;;;;;;;;901:10;933:15;:31;;;;:::i;:::-;917:47;;1264:5;1245:24;;;;;;;;;;;;;;;;;;;;1377:5;1354:28;;;;;;;;;;;;;;;;;;;;206:3888;;;;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:305;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;523:1;455:66;451:74;448:1;445:81;442:107;;;529:18;;:::i;:::-;442:107;573:1;570;566:9;559:16;;276:305;;;;:::o;206:3888:1:-;;;;;;;",
  "deployedSourceMap": "206:3888:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:8;;1515:15;:26;1507:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2586:9:::1;2562:8;:20;2571:10;2562:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2610:28;2616:10;2628:9;2610:28;;;;;;;:::i;:::-;;;;;;;;206:3888:::0;;;;;1686:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1135:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2214:210;;;:::i;:::-;;3591:501;;;;;;;;;;;;;:::i;:::-;;2970:487;;;;;;;;;;;;;:::i;:::-;;1907:197;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1686:96;1728:7;1754:21;1747:28;;1686:96;:::o;1135:43::-;;;;;;;;;;;;;;;;;:::o;2214:210::-;1533:8;;1515:15;:26;1507:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2290:1:::1;2278:9;:13;2270:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2365:9;2341:8;:20;2350:10;2341:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2389:28;2395:10;2407:9;2389:28;;;;;;;:::i;:::-;;;;;;;;2214:210::o:0;3591:501::-;3636:15;;;;;;;;;;;3628:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3747:18;3776:10;3747:40;;3797:15;3815:8;:12;3824:2;3815:12;;;;;;;;;;;;;;;;3797:30;;3859:1;3846:10;:14;3838:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3919:10;3903:8;:12;3912:2;3903:12;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;3941:12;3959:2;:7;;3975:10;3959:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:51;;;4009:7;4001:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;4059:26;4070:2;4074:10;4059:26;;;;;;;:::i;:::-;;;;;;;;3618:474;;;3591:501::o;2970:487::-;3033:8;;3014:15;:27;;3006:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3101:11;;;;;;;;;;;3100:12;3092:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1077:7;3173:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;3169:282;;3224:46;3242:7;;;;;;;;;;3252:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3224:46;;;;;;;:::i;:::-;;;;;;;;3284:7;;;;;;;;;;:16;;;3309:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3284:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3169:282;;;3379:4;3361:15;;:22;;;;;;;;;;;;;;;;;;3411:4;3397:11;;:18;;;;;;;;;;;;;;;;;;3434:6;;;;;;;;;;3169:282;2970:487::o;1907:197::-;1950:7;1984:15;1973:8;;:26;1969:129;;;2033:15;2022:8;;:26;;;;:::i;:::-;2015:33;;;;1969:129;2086:1;2079:8;;1907:197;;:::o;7:169:2:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:224::-;322:34;318:1;310:6;306:14;299:58;391:7;386:2;378:6;374:15;367:32;182:224;:::o;412:366::-;554:3;575:67;639:2;634:3;575:67;:::i;:::-;568:74;;651:93;740:3;651:93;:::i;:::-;769:2;764:3;760:12;753:19;;412:366;;;:::o;784:419::-;950:4;988:2;977:9;973:18;965:26;;1037:9;1031:4;1027:20;1023:1;1012:9;1008:17;1001:47;1065:131;1191:4;1065:131;:::i;:::-;1057:139;;784:419;;;:::o;1209:77::-;1246:7;1275:5;1264:16;;1209:77;;;:::o;1292:180::-;1340:77;1337:1;1330:88;1437:4;1434:1;1427:15;1461:4;1458:1;1451:15;1478:305;1518:3;1537:20;1555:1;1537:20;:::i;:::-;1532:25;;1571:20;1589:1;1571:20;:::i;:::-;1566:25;;1725:1;1657:66;1653:74;1650:1;1647:81;1644:107;;;1731:18;;:::i;:::-;1644:107;1775:1;1772;1768:9;1761:16;;1478:305;;;;:::o;1789:126::-;1826:7;1866:42;1859:5;1855:54;1844:65;;1789:126;;;:::o;1921:96::-;1958:7;1987:24;2005:5;1987:24;:::i;:::-;1976:35;;1921:96;;;:::o;2023:118::-;2110:24;2128:5;2110:24;:::i;:::-;2105:3;2098:37;2023:118;;:::o;2147:::-;2234:24;2252:5;2234:24;:::i;:::-;2229:3;2222:37;2147:118;;:::o;2271:332::-;2392:4;2430:2;2419:9;2415:18;2407:26;;2443:71;2511:1;2500:9;2496:17;2487:6;2443:71;:::i;:::-;2524:72;2592:2;2581:9;2577:18;2568:6;2524:72;:::i;:::-;2271:332;;;;;:::o;2609:222::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2753:71;2821:1;2810:9;2806:17;2797:6;2753:71;:::i;:::-;2609:222;;;;:::o;2918:117::-;3027:1;3024;3017:12;3164:122;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:139::-;3338:5;3376:6;3363:20;3354:29;;3392:33;3419:5;3392:33;:::i;:::-;3292:139;;;;:::o;3437:329::-;3496:6;3545:2;3533:9;3524:7;3520:23;3516:32;3513:119;;;3551:79;;:::i;:::-;3513:119;3671:1;3696:53;3741:7;3732:6;3721:9;3717:22;3696:53;:::i;:::-;3686:63;;3642:117;3437:329;;;;:::o;3772:222::-;3912:34;3908:1;3900:6;3896:14;3889:58;3981:5;3976:2;3968:6;3964:15;3957:30;3772:222;:::o;4000:366::-;4142:3;4163:67;4227:2;4222:3;4163:67;:::i;:::-;4156:74;;4239:93;4328:3;4239:93;:::i;:::-;4357:2;4352:3;4348:12;4341:19;;4000:366;;;:::o;4372:419::-;4538:4;4576:2;4565:9;4561:18;4553:26;;4625:9;4619:4;4615:20;4611:1;4600:9;4596:17;4589:47;4653:131;4779:4;4653:131;:::i;:::-;4645:139;;4372:419;;;:::o;4797:305::-;4937:34;4933:1;4925:6;4921:14;4914:58;5006:34;5001:2;4993:6;4989:15;4982:59;5075:19;5070:2;5062:6;5058:15;5051:44;4797:305;:::o;5108:366::-;5250:3;5271:67;5335:2;5330:3;5271:67;:::i;:::-;5264:74;;5347:93;5436:3;5347:93;:::i;:::-;5465:2;5460:3;5456:12;5449:19;;5108:366;;;:::o;5480:419::-;5646:4;5684:2;5673:9;5669:18;5661:26;;5733:9;5727:4;5723:20;5719:1;5708:9;5704:17;5697:47;5761:131;5887:4;5761:131;:::i;:::-;5753:139;;5480:419;;;:::o;5905:178::-;6045:30;6041:1;6033:6;6029:14;6022:54;5905:178;:::o;6089:366::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:419::-;6627:4;6665:2;6654:9;6650:18;6642:26;;6714:9;6708:4;6704:20;6700:1;6689:9;6685:17;6678:47;6742:131;6868:4;6742:131;:::i;:::-;6734:139;;6461:419;;;:::o;6886:191::-;6926:4;6946:20;6964:1;6946:20;:::i;:::-;6941:25;;6980:20;6998:1;6980:20;:::i;:::-;6975:25;;7019:1;7016;7013:8;7010:34;;;7024:18;;:::i;:::-;7010:34;7069:1;7066;7062:9;7054:17;;6886:191;;;;:::o;7083:147::-;7184:11;7221:3;7206:18;;7083:147;;;;:::o;7236:114::-;;:::o;7356:398::-;7515:3;7536:83;7617:1;7612:3;7536:83;:::i;:::-;7529:90;;7628:93;7717:3;7628:93;:::i;:::-;7746:1;7741:3;7737:11;7730:18;;7356:398;;;:::o;7760:379::-;7944:3;7966:147;8109:3;7966:147;:::i;:::-;7959:154;;8130:3;8123:10;;7760:379;;;:::o;8145:173::-;8285:25;8281:1;8273:6;8269:14;8262:49;8145:173;:::o;8324:366::-;8466:3;8487:67;8551:2;8546:3;8487:67;:::i;:::-;8480:74;;8563:93;8652:3;8563:93;:::i;:::-;8681:2;8676:3;8672:12;8665:19;;8324:366;;;:::o;8696:419::-;8862:4;8900:2;8889:9;8885:18;8877:26;;8949:9;8943:4;8939:20;8935:1;8924:9;8920:17;8913:47;8977:131;9103:4;8977:131;:::i;:::-;8969:139;;8696:419;;;:::o;9121:60::-;9149:3;9170:5;9163:12;;9121:60;;;:::o;9187:142::-;9237:9;9270:53;9288:34;9297:24;9315:5;9297:24;:::i;:::-;9288:34;:::i;:::-;9270:53;:::i;:::-;9257:66;;9187:142;;;:::o;9335:126::-;9385:9;9418:37;9449:5;9418:37;:::i;:::-;9405:50;;9335:126;;;:::o;9467:134::-;9525:9;9558:37;9589:5;9558:37;:::i;:::-;9545:50;;9467:134;;;:::o;9607:147::-;9702:45;9741:5;9702:45;:::i;:::-;9697:3;9690:58;9607:147;;:::o;9760:348::-;9889:4;9927:2;9916:9;9912:18;9904:26;;9940:79;10016:1;10005:9;10001:17;9992:6;9940:79;:::i;:::-;10029:72;10097:2;10086:9;10082:18;10073:6;10029:72;:::i;:::-;9760:348;;;;;:::o;10114:223::-;10254:34;10250:1;10242:6;10238:14;10231:58;10323:6;10318:2;10310:6;10306:15;10299:31;10114:223;:::o;10343:366::-;10485:3;10506:67;10570:2;10565:3;10506:67;:::i;:::-;10499:74;;10582:93;10671:3;10582:93;:::i;:::-;10700:2;10695:3;10691:12;10684:19;;10343:366;;;:::o;10715:419::-;10881:4;10919:2;10908:9;10904:18;10896:26;;10968:9;10962:4;10958:20;10954:1;10943:9;10939:17;10932:47;10996:131;11122:4;10996:131;:::i;:::-;10988:139;;10715:419;;;:::o;11140:229::-;11280:34;11276:1;11268:6;11264:14;11257:58;11349:12;11344:2;11336:6;11332:15;11325:37;11140:229;:::o;11375:366::-;11517:3;11538:67;11602:2;11597:3;11538:67;:::i;:::-;11531:74;;11614:93;11703:3;11614:93;:::i;:::-;11732:2;11727:3;11723:12;11716:19;;11375:366;;;:::o;11747:419::-;11913:4;11951:2;11940:9;11936:18;11928:26;;12000:9;11994:4;11990:20;11986:1;11975:9;11971:17;11964:47;12028:131;12154:4;12028:131;:::i;:::-;12020:139;;11747:419;;;:::o;12172:122::-;12245:24;12263:5;12245:24;:::i;:::-;12238:5;12235:35;12225:63;;12284:1;12281;12274:12;12225:63;12172:122;:::o;12300:143::-;12357:5;12388:6;12382:13;12373:22;;12404:33;12431:5;12404:33;:::i;:::-;12300:143;;;;:::o;12449:351::-;12519:6;12568:2;12556:9;12547:7;12543:23;12539:32;12536:119;;;12574:79;;:::i;:::-;12536:119;12694:1;12719:64;12775:7;12766:6;12755:9;12751:22;12719:64;:::i;:::-;12709:74;;12665:128;12449:351;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ExternalContract.sol\";\n\n/**\n * Core contract of decentralized staking app, provides basic mechanism of Ether stacking\n * @author kchn9\n */\ncontract Staker {\n    /// @notice Event used to allow dApp frontend keep track of stake changes\n    event Stake(address stakingUser, uint amount);\n\n    /// @notice Emited when users are allowed to withdraw their funds\n    event Open();\n\n    /// @notice Keeping an eye on withdrawals\n    event Withdrawal(address who, uint amount);\n\n    /// @notice Keeps track of sent Stake to external stake-holding contract\n    event StakeSent(address externalAddress, uint amount);\n\n    /// @notice Representation of any external stake-holding contract\n    ExternalContract example = new ExternalContract();\n\n    /// @notice Amount of time the user has to stake ETH to earn \n    uint constant DEADLINE_TIME = 60 seconds;\n    uint deadline = block.timestamp + DEADLINE_TIME;\n\n    /// @notice The minimum amount of ETH that must be stacked by users to earn\n    uint constant THRESHOLD = 1 ether;\n\n    /// @notice Keep track of user balances\n    mapping ( address => uint ) public balances;\n\n    /// @notice Keep track if contract was executed already\n    bool wasExecuted = false;\n\n    /// @notice Bool allowing users to withdraw if threshold was not exceeded\n    bool openForWithdraw = false;\n\n    /// @notice Access modifier to allow call functions only before stacking is over\n    modifier stakingOnly() {\n        require(block.timestamp < deadline, \"Staker: Staking phase is over already\");\n        _;\n    }\n\n    /// @notice Getter for current contract balance - mostly for test purposes\n    function getBalance() public view returns(uint256) {\n        return address(this).balance;\n    }\n\n    /**\n     * @notice Getter to keep eye on how much time left before staking ends - mostly for test purposes\n     */\n    function getTimeLeft() public view returns(uint256) {\n        if (deadline > block.timestamp) {\n            return deadline - block.timestamp;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @notice Stakes user funds to this contract balance\n     * @dev Emits Stake event\n     */\n    function stake() external payable stakingOnly {\n        require(msg.value > 0, \"Staker: User is not staking any ETH\");\n        balances[msg.sender] += msg.value;\n        emit Stake(msg.sender, msg.value);\n    }\n\n    /**\n     * @dev Fallback function for ETH that been sent directionally\n     */\n    receive() external payable stakingOnly {\n        balances[msg.sender] += msg.value;\n        emit Stake(msg.sender, msg.value);\n    }\n\n    /**\n     * @notice Checks if staking time is up, checks if treshold is exceeded - if so it send money to external contract,\n     * if not it allow users to withdraw their coins. It may be called only once.\n     * @dev Emits either StakeSent(address, uint) or Open() events, depends if threshold is exceeded\n     */\n    function execute() public {\n        require(block.timestamp >= deadline, \"Staker: The deadline is not over yet\");\n        require(!wasExecuted, \"Staker: Contract has been executed already\");\n        if (this.getBalance() >= THRESHOLD) {\n            emit StakeSent(address(example), this.getBalance());\n            example.complete{ value: this.getBalance() }();\n        } else {\n            openForWithdraw = true;\n            wasExecuted = true;\n            emit Open();\n        }\n    }\n\n    /**\n     * @notice Allows users to withdraw their funds if staking phase is over\n     * @dev Emits Withdrawal event\n     */\n    function withdraw() public {\n        require(openForWithdraw, \"Staker: Contract is not open for withdraw - staking continues / threshold reached\");\n        address payable to = payable(msg.sender);\n        uint toWithdraw = balances[to];\n\n        require(toWithdraw > 0, \"Staker: No funds to withdraw\");\n        balances[to] -= toWithdraw;\n\n        (bool success, ) = to.call{ value: toWithdraw }(\"\");\n        require(success, \"Staker: Withdraw failed\");\n        emit Withdrawal(to, toWithdraw);\n    }\n}",
  "sourcePath": "/Users/matkuch/Code/staking-app/contracts/Staker.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staker.sol",
    "exportedSymbols": {
      "ExternalContract": [
        31
      ],
      "Staker": [
        307
      ]
    },
    "id": 308,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "project:/contracts/ExternalContract.sol",
        "file": "./ExternalContract.sol",
        "id": 34,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 32,
        "src": "57:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staker",
        "contractDependencies": [
          31
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 35,
          "nodeType": "StructuredDocumentation",
          "src": "91:114:1",
          "text": " Core contract of decentralized staking app, provides basic mechanism of Ether stacking\n @author kchn9"
        },
        "fullyImplemented": true,
        "id": 307,
        "linearizedBaseContracts": [
          307
        ],
        "name": "Staker",
        "nameLocation": "215:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "228:73:1",
              "text": "@notice Event used to allow dApp frontend keep track of stake changes"
            },
            "eventSelector": "ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a",
            "id": 42,
            "name": "Stake",
            "nameLocation": "312:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingUser",
                  "nameLocation": "326:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "318:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "344:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "339:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:34:1"
            },
            "src": "306:46:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "358:65:1",
              "text": "@notice Emited when users are allowed to withdraw their funds"
            },
            "eventSelector": "59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5",
            "id": 45,
            "name": "Open",
            "nameLocation": "434:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:2:1"
            },
            "src": "428:13:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "447:41:1",
              "text": "@notice Keeping an eye on withdrawals"
            },
            "eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
            "id": 52,
            "name": "Withdrawal",
            "nameLocation": "499:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "518:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "510:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "528:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "523:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:26:1"
            },
            "src": "493:43:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "542:72:1",
              "text": "@notice Keeps track of sent Stake to external stake-holding contract"
            },
            "eventSelector": "0d65baa3f5024928559313e1ead167570a5661a1b3e56fb6a443e8cc8ab5e0cc",
            "id": 59,
            "name": "StakeSent",
            "nameLocation": "625:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "externalAddress",
                  "nameLocation": "643:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "635:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "665:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "660:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:38:1"
            },
            "src": "619:54:1"
          },
          {
            "constant": false,
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "679:65:1",
              "text": "@notice Representation of any external stake-holding contract"
            },
            "id": 67,
            "mutability": "mutable",
            "name": "example",
            "nameLocation": "766:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "749:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExternalContract_$31",
              "typeString": "contract ExternalContract"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "ExternalContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31,
                "src": "749:16:1"
              },
              "referencedDeclaration": 31,
              "src": "749:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalContract_$31",
                "typeString": "contract ExternalContract"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 65,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "776:20:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ExternalContract_$31_$",
                  "typeString": "function () returns (contract ExternalContract)"
                },
                "typeName": {
                  "id": 64,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 63,
                    "name": "ExternalContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 31,
                    "src": "780:16:1"
                  },
                  "referencedDeclaration": 31,
                  "src": "780:16:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                    "typeString": "contract ExternalContract"
                  }
                }
              },
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "776:22:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalContract_$31",
                "typeString": "contract ExternalContract"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "805:61:1",
              "text": "@notice Amount of time the user has to stake ETH to earn "
            },
            "id": 71,
            "mutability": "constant",
            "name": "DEADLINE_TIME",
            "nameLocation": "885:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "871:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "871:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "901:10:1",
              "subdenomination": "seconds",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 77,
            "mutability": "mutable",
            "name": "deadline",
            "nameLocation": "922:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "917:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "917:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "expression": {
                  "id": 73,
                  "name": "block",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4294967292,
                  "src": "933:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_block",
                    "typeString": "block"
                  }
                },
                "id": 74,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "timestamp",
                "nodeType": "MemberAccess",
                "src": "933:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "id": 75,
                "name": "DEADLINE_TIME",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 71,
                "src": "951:13:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "933:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "971:75:1",
              "text": "@notice The minimum amount of ETH that must be stacked by users to earn"
            },
            "id": 81,
            "mutability": "constant",
            "name": "THRESHOLD",
            "nameLocation": "1065:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1051:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1051:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1077:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "1091:39:1",
              "text": "@notice Keep track of user balances"
            },
            "functionSelector": "27e235e3",
            "id": 86,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1170:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1135:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1145:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1135:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 84,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1156:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "1185:55:1",
              "text": "@notice Keep track if contract was executed already"
            },
            "id": 90,
            "mutability": "mutable",
            "name": "wasExecuted",
            "nameLocation": "1250:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1245:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 88,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1245:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 89,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1264:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1276:73:1",
              "text": "@notice Bool allowing users to withdraw if threshold was not exceeded"
            },
            "id": 94,
            "mutability": "mutable",
            "name": "openForWithdraw",
            "nameLocation": "1359:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1354:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 92,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1354:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 93,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1377:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1497:104:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1515:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1515:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 100,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1533:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1515:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a205374616b696e67207068617365206973206f76657220616c7265616479",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
                          "typeString": "literal_string \"Staker: Staking phase is over already\""
                        },
                        "value": "Staker: Staking phase is over already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
                          "typeString": "literal_string \"Staker: Staking phase is over already\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:76:1"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "1593:1:1"
                }
              ]
            },
            "documentation": {
              "id": 95,
              "nodeType": "StructuredDocumentation",
              "src": "1389:80:1",
              "text": "@notice Access modifier to allow call functions only before stacking is over"
            },
            "id": 107,
            "name": "stakingOnly",
            "nameLocation": "1483:11:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:1"
            },
            "src": "1474:127:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1737:45:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 115,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1762:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        ],
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1754:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1754:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1754:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 118,
                  "nodeType": "Return",
                  "src": "1747:28:1"
                }
              ]
            },
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1607:74:1",
              "text": "@notice Getter for current contract balance - mostly for test purposes"
            },
            "functionSelector": "12065fe0",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "1695:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:2:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1728:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1727:9:1"
            },
            "scope": 307,
            "src": "1686:96:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1959:145:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 126,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1973:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 127,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1984:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1973:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "2065:33:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2086:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 125,
                        "id": 137,
                        "nodeType": "Return",
                        "src": "2079:8:1"
                      }
                    ]
                  },
                  "id": 139,
                  "nodeType": "IfStatement",
                  "src": "1969:129:1",
                  "trueBody": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "2001:58:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 130,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2022:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 131,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2033:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2033:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2022:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 125,
                        "id": 134,
                        "nodeType": "Return",
                        "src": "2015:33:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1788:114:1",
              "text": " @notice Getter to keep eye on how much time left before staking ends - mostly for test purposes"
            },
            "functionSelector": "c7e284b8",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeLeft",
            "nameLocation": "1916:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1950:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:9:1"
            },
            "scope": 307,
            "src": "1907:197:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2260:164:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2278:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2278:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2290:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2278:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a2055736572206973206e6f74207374616b696e6720616e7920455448",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2293:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
                          "typeString": "literal_string \"Staker: User is not staking any ETH\""
                        },
                        "value": "Staker: User is not staking any ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
                          "typeString": "literal_string \"Staker: User is not staking any ETH\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2270:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:61:1"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2341:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2350:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2350:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2341:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2365:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2365:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2341:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2395:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2395:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2407:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2407:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 163,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2389:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "EmitStatement",
                  "src": "2384:33:1"
                }
              ]
            },
            "documentation": {
              "id": 142,
              "nodeType": "StructuredDocumentation",
              "src": "2110:99:1",
              "text": " @notice Stakes user funds to this contract balance\n @dev Emits Stake event"
            },
            "functionSelector": "3a4b66f1",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 144,
                  "name": "stakingOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2248:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:11:1"
              }
            ],
            "name": "stake",
            "nameLocation": "2223:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:2:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:0:1"
            },
            "scope": 307,
            "src": "2214:210:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2552:93:1",
              "statements": [
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 177,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2562:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 180,
                      "indexExpression": {
                        "expression": {
                          "id": 178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2571:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2571:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2562:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 181,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2586:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2586:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2562:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2616:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2616:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2628:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2628:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 185,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2610:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "2605:33:1"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "2430:78:1",
              "text": " @dev Fallback function for ETH that been sent directionally"
            },
            "id": 193,
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "stakingOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2540:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2540:11:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2552:0:1"
            },
            "scope": 307,
            "src": "2513:132:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2996:461:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 198,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3014:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3014:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 200,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "3033:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3014:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a2054686520646561646c696e65206973206e6f74206f76657220796574",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3043:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
                          "typeString": "literal_string \"Staker: The deadline is not over yet\""
                        },
                        "value": "Staker: The deadline is not over yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
                          "typeString": "literal_string \"Staker: The deadline is not over yet\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3006:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:76:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3100:12:1",
                        "subExpression": {
                          "id": 206,
                          "name": "wasExecuted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3101:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e747261637420686173206265656e20657865637574656420616c7265616479",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3114:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
                          "typeString": "literal_string \"Staker: Contract has been executed already\""
                        },
                        "value": "Staker: Contract has been executed already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
                          "typeString": "literal_string \"Staker: Contract has been executed already\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3092:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:67:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 211,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3173:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "3173:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3173:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 214,
                      "name": "THRESHOLD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3194:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3173:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "3347:104:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 236,
                            "name": "openForWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3361:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3379:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3361:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "3361:22:1"
                      },
                      {
                        "expression": {
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 240,
                            "name": "wasExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3397:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3411:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3397:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 243,
                        "nodeType": "ExpressionStatement",
                        "src": "3397:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 244,
                            "name": "Open",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3434:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3434:6:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "EmitStatement",
                        "src": "3429:11:1"
                      }
                    ]
                  },
                  "id": 248,
                  "nodeType": "IfStatement",
                  "src": "3169:282:1",
                  "trueBody": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "3205:136:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 219,
                                  "name": "example",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "3242:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                                    "typeString": "contract ExternalContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                                    "typeString": "contract ExternalContract"
                                  }
                                ],
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3234:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3234:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3234:16:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 221,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3252:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staker_$307",
                                    "typeString": "contract Staker"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 120,
                                "src": "3252:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3252:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 216,
                            "name": "StakeSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "3224:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3224:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 225,
                        "nodeType": "EmitStatement",
                        "src": "3219:51:1"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 226,
                                "name": "example",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3284:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExternalContract_$31",
                                  "typeString": "contract ExternalContract"
                                }
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "complete",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "3284:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 229,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3309:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Staker_$307",
                                      "typeString": "contract Staker"
                                    }
                                  },
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 120,
                                  "src": "3309:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3309:17:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3284:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3284:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 234,
                        "nodeType": "ExpressionStatement",
                        "src": "3284:46:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "2651:314:1",
              "text": " @notice Checks if staking time is up, checks if treshold is exceeded - if so it send money to external contract,\n if not it allow users to withdraw their coins. It may be called only once.\n @dev Emits either StakeSent(address, uint) or Open() events, depends if threshold is exceeded"
            },
            "functionSelector": "61461954",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2979:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:2:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2996:0:1"
            },
            "scope": 307,
            "src": "2970:487:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "3618:474:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "openForWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "3636:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e7472616374206973206e6f74206f70656e20666f72207769746864726177202d207374616b696e6720636f6e74696e756573202f207468726573686f6c642072656163686564",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
                          "typeString": "literal_string \"Staker: Contract is not open for withdraw - staking continues / threshold reached\""
                        },
                        "value": "Staker: Contract is not open for withdraw - staking continues / threshold reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
                          "typeString": "literal_string \"Staker: Contract is not open for withdraw - staking continues / threshold reached\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3628:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:109:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:109:1"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3763:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3747:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3747:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3776:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3776:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3768:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3768:8:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3747:40:1"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "toWithdraw",
                      "nameLocation": "3802:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3797:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3797:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "baseExpression": {
                      "id": 269,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3815:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "id": 270,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "3824:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3815:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3797:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 274,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "3846:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3859:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3846:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a204e6f2066756e647320746f207769746864726177",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3862:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
                          "typeString": "literal_string \"Staker: No funds to withdraw\""
                        },
                        "value": "Staker: No funds to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
                          "typeString": "literal_string \"Staker: No funds to withdraw\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3838:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3838:55:1"
                },
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 280,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3903:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 282,
                      "indexExpression": {
                        "id": 281,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "3912:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3903:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "toWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "3919:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3903:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:26:1"
                },
                {
                  "assignments": [
                    287,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3946:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3941:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3941:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 294,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3988:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 288,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "3959:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3959:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 290,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "3975:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3959:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3940:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "4009:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a205769746864726177206661696c6564",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4018:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
                          "typeString": "literal_string \"Staker: Withdraw failed\""
                        },
                        "value": "Staker: Withdraw failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
                          "typeString": "literal_string \"Staker: Withdraw failed\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4001:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "4070:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 302,
                        "name": "toWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4074:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 300,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4059:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "EmitStatement",
                  "src": "4054:31:1"
                }
              ]
            },
            "documentation": {
              "id": 251,
              "nodeType": "StructuredDocumentation",
              "src": "3463:123:1",
              "text": " @notice Allows users to withdraw their funds if staking phase is over\n @dev Emits Withdrawal event"
            },
            "functionSelector": "3ccfd60b",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3600:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:1"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3618:0:1"
            },
            "scope": 307,
            "src": "3591:501:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 308,
        "src": "206:3888:1",
        "usedErrors": []
      }
    ],
    "src": "32:4062:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Staker.sol",
    "exportedSymbols": {
      "ExternalContract": [
        31
      ],
      "Staker": [
        307
      ]
    },
    "id": 308,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "project:/contracts/ExternalContract.sol",
        "file": "./ExternalContract.sol",
        "id": 34,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 32,
        "src": "57:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staker",
        "contractDependencies": [
          31
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 35,
          "nodeType": "StructuredDocumentation",
          "src": "91:114:1",
          "text": " Core contract of decentralized staking app, provides basic mechanism of Ether stacking\n @author kchn9"
        },
        "fullyImplemented": true,
        "id": 307,
        "linearizedBaseContracts": [
          307
        ],
        "name": "Staker",
        "nameLocation": "215:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "228:73:1",
              "text": "@notice Event used to allow dApp frontend keep track of stake changes"
            },
            "eventSelector": "ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a",
            "id": 42,
            "name": "Stake",
            "nameLocation": "312:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingUser",
                  "nameLocation": "326:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "318:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "344:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "339:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:34:1"
            },
            "src": "306:46:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "358:65:1",
              "text": "@notice Emited when users are allowed to withdraw their funds"
            },
            "eventSelector": "59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5",
            "id": 45,
            "name": "Open",
            "nameLocation": "434:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:2:1"
            },
            "src": "428:13:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "447:41:1",
              "text": "@notice Keeping an eye on withdrawals"
            },
            "eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
            "id": 52,
            "name": "Withdrawal",
            "nameLocation": "499:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "518:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "510:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "528:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "523:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:26:1"
            },
            "src": "493:43:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "542:72:1",
              "text": "@notice Keeps track of sent Stake to external stake-holding contract"
            },
            "eventSelector": "0d65baa3f5024928559313e1ead167570a5661a1b3e56fb6a443e8cc8ab5e0cc",
            "id": 59,
            "name": "StakeSent",
            "nameLocation": "625:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "externalAddress",
                  "nameLocation": "643:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "635:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "665:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "660:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:38:1"
            },
            "src": "619:54:1"
          },
          {
            "constant": false,
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "679:65:1",
              "text": "@notice Representation of any external stake-holding contract"
            },
            "id": 67,
            "mutability": "mutable",
            "name": "example",
            "nameLocation": "766:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "749:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExternalContract_$31",
              "typeString": "contract ExternalContract"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "ExternalContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31,
                "src": "749:16:1"
              },
              "referencedDeclaration": 31,
              "src": "749:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalContract_$31",
                "typeString": "contract ExternalContract"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 65,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "776:20:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ExternalContract_$31_$",
                  "typeString": "function () returns (contract ExternalContract)"
                },
                "typeName": {
                  "id": 64,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 63,
                    "name": "ExternalContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 31,
                    "src": "780:16:1"
                  },
                  "referencedDeclaration": 31,
                  "src": "780:16:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                    "typeString": "contract ExternalContract"
                  }
                }
              },
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "776:22:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalContract_$31",
                "typeString": "contract ExternalContract"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "805:61:1",
              "text": "@notice Amount of time the user has to stake ETH to earn "
            },
            "id": 71,
            "mutability": "constant",
            "name": "DEADLINE_TIME",
            "nameLocation": "885:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "871:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "871:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "901:10:1",
              "subdenomination": "seconds",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 77,
            "mutability": "mutable",
            "name": "deadline",
            "nameLocation": "922:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "917:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "917:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "expression": {
                  "id": 73,
                  "name": "block",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4294967292,
                  "src": "933:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_block",
                    "typeString": "block"
                  }
                },
                "id": 74,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "timestamp",
                "nodeType": "MemberAccess",
                "src": "933:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "id": 75,
                "name": "DEADLINE_TIME",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 71,
                "src": "951:13:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "933:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "971:75:1",
              "text": "@notice The minimum amount of ETH that must be stacked by users to earn"
            },
            "id": 81,
            "mutability": "constant",
            "name": "THRESHOLD",
            "nameLocation": "1065:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1051:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1051:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1077:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "1091:39:1",
              "text": "@notice Keep track of user balances"
            },
            "functionSelector": "27e235e3",
            "id": 86,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1170:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1135:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1145:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1135:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 84,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1156:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "1185:55:1",
              "text": "@notice Keep track if contract was executed already"
            },
            "id": 90,
            "mutability": "mutable",
            "name": "wasExecuted",
            "nameLocation": "1250:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1245:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 88,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1245:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 89,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1264:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1276:73:1",
              "text": "@notice Bool allowing users to withdraw if threshold was not exceeded"
            },
            "id": 94,
            "mutability": "mutable",
            "name": "openForWithdraw",
            "nameLocation": "1359:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 307,
            "src": "1354:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 92,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1354:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 93,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1377:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1497:104:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1515:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1515:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 100,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1533:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1515:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a205374616b696e67207068617365206973206f76657220616c7265616479",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
                          "typeString": "literal_string \"Staker: Staking phase is over already\""
                        },
                        "value": "Staker: Staking phase is over already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faf5207ba3e6d3a18074c4ee892181670369792342e27310d2a4c040bb314543",
                          "typeString": "literal_string \"Staker: Staking phase is over already\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:76:1"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "1593:1:1"
                }
              ]
            },
            "documentation": {
              "id": 95,
              "nodeType": "StructuredDocumentation",
              "src": "1389:80:1",
              "text": "@notice Access modifier to allow call functions only before stacking is over"
            },
            "id": 107,
            "name": "stakingOnly",
            "nameLocation": "1483:11:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:1"
            },
            "src": "1474:127:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1737:45:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 115,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1762:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        ],
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1754:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1754:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1754:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 118,
                  "nodeType": "Return",
                  "src": "1747:28:1"
                }
              ]
            },
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1607:74:1",
              "text": "@notice Getter for current contract balance - mostly for test purposes"
            },
            "functionSelector": "12065fe0",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "1695:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:2:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1728:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1727:9:1"
            },
            "scope": 307,
            "src": "1686:96:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1959:145:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 126,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1973:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 127,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1984:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1973:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "2065:33:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2086:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 125,
                        "id": 137,
                        "nodeType": "Return",
                        "src": "2079:8:1"
                      }
                    ]
                  },
                  "id": 139,
                  "nodeType": "IfStatement",
                  "src": "1969:129:1",
                  "trueBody": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "2001:58:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 130,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2022:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 131,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2033:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2033:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2022:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 125,
                        "id": 134,
                        "nodeType": "Return",
                        "src": "2015:33:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1788:114:1",
              "text": " @notice Getter to keep eye on how much time left before staking ends - mostly for test purposes"
            },
            "functionSelector": "c7e284b8",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeLeft",
            "nameLocation": "1916:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1950:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:9:1"
            },
            "scope": 307,
            "src": "1907:197:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2260:164:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2278:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2278:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2290:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2278:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a2055736572206973206e6f74207374616b696e6720616e7920455448",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2293:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
                          "typeString": "literal_string \"Staker: User is not staking any ETH\""
                        },
                        "value": "Staker: User is not staking any ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f05dfa14ebda04bfc7b44aba49cc21c03d16a13f4e7cefbe86b42d2c95594774",
                          "typeString": "literal_string \"Staker: User is not staking any ETH\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2270:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:61:1"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2341:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2350:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2350:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2341:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2365:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2365:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2341:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2395:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2395:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2407:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2407:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 163,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2389:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "EmitStatement",
                  "src": "2384:33:1"
                }
              ]
            },
            "documentation": {
              "id": 142,
              "nodeType": "StructuredDocumentation",
              "src": "2110:99:1",
              "text": " @notice Stakes user funds to this contract balance\n @dev Emits Stake event"
            },
            "functionSelector": "3a4b66f1",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 144,
                  "name": "stakingOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2248:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:11:1"
              }
            ],
            "name": "stake",
            "nameLocation": "2223:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:2:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:0:1"
            },
            "scope": 307,
            "src": "2214:210:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2552:93:1",
              "statements": [
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 177,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2562:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 180,
                      "indexExpression": {
                        "expression": {
                          "id": 178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2571:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2571:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2562:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 181,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2586:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2586:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2562:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2616:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2616:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2628:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2628:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 185,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2610:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "2605:33:1"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "2430:78:1",
              "text": " @dev Fallback function for ETH that been sent directionally"
            },
            "id": 193,
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "stakingOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2540:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2540:11:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2552:0:1"
            },
            "scope": 307,
            "src": "2513:132:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2996:461:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 198,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3014:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3014:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 200,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "3033:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3014:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a2054686520646561646c696e65206973206e6f74206f76657220796574",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3043:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
                          "typeString": "literal_string \"Staker: The deadline is not over yet\""
                        },
                        "value": "Staker: The deadline is not over yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d988d15da98636b5bea55bbd2f424866083787328baf3a78d270d1810bacaedf",
                          "typeString": "literal_string \"Staker: The deadline is not over yet\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3006:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:76:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3100:12:1",
                        "subExpression": {
                          "id": 206,
                          "name": "wasExecuted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3101:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e747261637420686173206265656e20657865637574656420616c7265616479",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3114:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
                          "typeString": "literal_string \"Staker: Contract has been executed already\""
                        },
                        "value": "Staker: Contract has been executed already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a88f0d3d40cab427dffeb73ff081f0a348f1d73a611771e93f93445ea441fa",
                          "typeString": "literal_string \"Staker: Contract has been executed already\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3092:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:67:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 211,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3173:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$307",
                            "typeString": "contract Staker"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "3173:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3173:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 214,
                      "name": "THRESHOLD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3194:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3173:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "3347:104:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 236,
                            "name": "openForWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3361:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3379:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3361:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "3361:22:1"
                      },
                      {
                        "expression": {
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 240,
                            "name": "wasExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3397:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3411:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3397:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 243,
                        "nodeType": "ExpressionStatement",
                        "src": "3397:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 244,
                            "name": "Open",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3434:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3434:6:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "EmitStatement",
                        "src": "3429:11:1"
                      }
                    ]
                  },
                  "id": 248,
                  "nodeType": "IfStatement",
                  "src": "3169:282:1",
                  "trueBody": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "3205:136:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 219,
                                  "name": "example",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "3242:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                                    "typeString": "contract ExternalContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalContract_$31",
                                    "typeString": "contract ExternalContract"
                                  }
                                ],
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3234:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3234:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3234:16:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 221,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3252:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staker_$307",
                                    "typeString": "contract Staker"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 120,
                                "src": "3252:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3252:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 216,
                            "name": "StakeSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "3224:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3224:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 225,
                        "nodeType": "EmitStatement",
                        "src": "3219:51:1"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 226,
                                "name": "example",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3284:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExternalContract_$31",
                                  "typeString": "contract ExternalContract"
                                }
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "complete",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "3284:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 229,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3309:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Staker_$307",
                                      "typeString": "contract Staker"
                                    }
                                  },
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 120,
                                  "src": "3309:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3309:17:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3284:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3284:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 234,
                        "nodeType": "ExpressionStatement",
                        "src": "3284:46:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "2651:314:1",
              "text": " @notice Checks if staking time is up, checks if treshold is exceeded - if so it send money to external contract,\n if not it allow users to withdraw their coins. It may be called only once.\n @dev Emits either StakeSent(address, uint) or Open() events, depends if threshold is exceeded"
            },
            "functionSelector": "61461954",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2979:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:2:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2996:0:1"
            },
            "scope": 307,
            "src": "2970:487:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "3618:474:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "openForWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "3636:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a20436f6e7472616374206973206e6f74206f70656e20666f72207769746864726177202d207374616b696e6720636f6e74696e756573202f207468726573686f6c642072656163686564",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
                          "typeString": "literal_string \"Staker: Contract is not open for withdraw - staking continues / threshold reached\""
                        },
                        "value": "Staker: Contract is not open for withdraw - staking continues / threshold reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_094e1d4e35c3adbc97498086699e80c27f597ca2849c221d3453d18fde478f22",
                          "typeString": "literal_string \"Staker: Contract is not open for withdraw - staking continues / threshold reached\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3628:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:109:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:109:1"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3763:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3747:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3747:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3776:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3776:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3768:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3768:8:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3747:40:1"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "toWithdraw",
                      "nameLocation": "3802:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3797:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3797:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "baseExpression": {
                      "id": 269,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3815:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "id": 270,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "3824:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3815:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3797:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 274,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "3846:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3859:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3846:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a204e6f2066756e647320746f207769746864726177",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3862:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
                          "typeString": "literal_string \"Staker: No funds to withdraw\""
                        },
                        "value": "Staker: No funds to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc3aa6a761b51cfa9aa29724120680410ac82a4c87d6934716bf9993cd82c95e",
                          "typeString": "literal_string \"Staker: No funds to withdraw\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3838:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3838:55:1"
                },
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 280,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3903:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 282,
                      "indexExpression": {
                        "id": 281,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "3912:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3903:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "toWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "3919:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3903:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:26:1"
                },
                {
                  "assignments": [
                    287,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3946:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3941:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3941:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 294,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3988:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 288,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "3959:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3959:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 290,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "3975:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3959:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3940:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "4009:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b65723a205769746864726177206661696c6564",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4018:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
                          "typeString": "literal_string \"Staker: Withdraw failed\""
                        },
                        "value": "Staker: Withdraw failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a27b3928230cfb749a6999943ad66cc4fd869c938e0791248e7a0cc93fed0aaa",
                          "typeString": "literal_string \"Staker: Withdraw failed\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4001:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "4070:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 302,
                        "name": "toWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4074:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 300,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4059:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "EmitStatement",
                  "src": "4054:31:1"
                }
              ]
            },
            "documentation": {
              "id": 251,
              "nodeType": "StructuredDocumentation",
              "src": "3463:123:1",
              "text": " @notice Allows users to withdraw their funds if staking phase is over\n @dev Emits Withdrawal event"
            },
            "functionSelector": "3ccfd60b",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3600:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:1"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3618:0:1"
            },
            "scope": 307,
            "src": "3591:501:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 308,
        "src": "206:3888:1",
        "usedErrors": []
      }
    ],
    "src": "32:4062:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb0aD993DE8783Ab2afFFdBFD25FCa9F7E4d27241",
      "transactionHash": "0xcfd357473ac1c1dd86f887ebe648d70f3d44e76c7fbe9b0340da7b5826827806"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-09T22:14:36.892Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "kchn9",
    "kind": "dev",
    "methods": {
      "execute()": {
        "details": "Emits either StakeSent(address, uint) or Open() events, depends if threshold is exceeded"
      },
      "stake()": {
        "details": "Emits Stake event"
      },
      "withdraw()": {
        "details": "Emits Withdrawal event"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Open()": {
        "notice": "Emited when users are allowed to withdraw their funds"
      },
      "Stake(address,uint256)": {
        "notice": "Event used to allow dApp frontend keep track of stake changes"
      },
      "StakeSent(address,uint256)": {
        "notice": "Keeps track of sent Stake to external stake-holding contract"
      },
      "Withdrawal(address,uint256)": {
        "notice": "Keeping an eye on withdrawals"
      }
    },
    "kind": "user",
    "methods": {
      "balances(address)": {
        "notice": "Keep track of user balances"
      },
      "execute()": {
        "notice": "Checks if staking time is up, checks if treshold is exceeded - if so it send money to external contract, if not it allow users to withdraw their coins. It may be called only once."
      },
      "getBalance()": {
        "notice": "Getter for current contract balance - mostly for test purposes"
      },
      "getTimeLeft()": {
        "notice": "Getter to keep eye on how much time left before staking ends - mostly for test purposes"
      },
      "stake()": {
        "notice": "Stakes user funds to this contract balance"
      },
      "withdraw()": {
        "notice": "Allows users to withdraw their funds if staking phase is over"
      }
    },
    "notice": "Core contract of decentralized staking app, provides basic mechanism of Ether stacking",
    "version": 1
  }
}