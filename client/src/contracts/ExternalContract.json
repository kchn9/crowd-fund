{
  "contractName": "ExternalContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collectedAmount",
          "type": "uint256"
        }
      ],
      "name": "Complete",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "complete",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectedAmount\",\"type\":\"uint256\"}],\"name\":\"Complete\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"complete()\":{\"details\":\"Emits Complete event \"}},\"version\":1},\"userdoc\":{\"events\":{\"Complete(uint256)\":{\"notice\":\"Event to keep eye on process completion\"}},\"kind\":\"user\",\"methods\":{\"complete()\":{\"notice\":\"Basic receive funds function\"},\"getBalance()\":{\"notice\":\"Contract balance getter, test purposes only\"}},\"notice\":\"Example of representation of any external stake-holding contract  that receives stacked funds and then emits Complete(uint) event\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ExternalContract.sol\":\"ExternalContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ExternalContract.sol\":{\"keccak256\":\"0x0648d2ca642318db6b0f74d82254610b07fb630c43a7fe31e6c851b92b956e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a601416dca553af94efb8d8fd2c687e621f4f38a397722bd0427bdd885b3a4\",\"dweb:/ipfs/QmZMR74aPFpxXfyHDBdtL69WCAZChXJRa2nqQsREh3Vvyh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060fe8061001f6000396000f3fe60806040526004361060265760003560e01c806312065fe014602b578063522e1177146051575b600080fd5b348015603657600080fd5b50603d6059565b6040516048919060af565b60405180910390f35b60576061565b005b600047905090565b7faaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e734604051608e919060af565b60405180910390a1565b6000819050919050565b60a9816098565b82525050565b600060208201905060c2600083018460a2565b9291505056fea264697066735822122063562bd04092c48191fa1c4756cd83c2e242dd5b354fead84dd5b46e768b064864736f6c634300080d0033",
  "deployedBytecode": "0x60806040526004361060265760003560e01c806312065fe014602b578063522e1177146051575b600080fd5b348015603657600080fd5b50603d6059565b6040516048919060af565b60405180910390f35b60576061565b005b600047905090565b7faaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e734604051608e919060af565b60405180910390a1565b6000819050919050565b60a9816098565b82525050565b600060208201905060c2600083018460a2565b9291505056fea264697066735822122063562bd04092c48191fa1c4756cd83c2e242dd5b354fead84dd5b46e768b064864736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:439:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:2",
                "type": ""
              }
            ],
            "src": "90:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:2",
                "type": ""
              }
            ],
            "src": "214:222:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "201:450:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "201:450:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;556:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:78;;;:::i;:::-;;556:93;598:4;621:21;614:28;;556:93;:::o;412:78::-;464:19;473:9;464:19;;;;;;:::i;:::-;;;;;;;;412:78::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * Example of representation of any external stake-holding contract \n * that receives stacked funds and then emits Complete(uint) event\n */\ncontract ExternalContract {\n    /// @notice Event to keep eye on process completion\n    event Complete(uint collectedAmount);\n\n    /// @notice Basic receive funds function\n    /// @dev Emits Complete event \n    function complete() external payable {\n        emit Complete(msg.value);\n    }\n\n    /// @notice Contract balance getter, test purposes only\n    function getBalance() public view returns(uint) {\n        return address(this).balance;\n    }\n}",
  "sourcePath": "/Users/matkuch/Code/staking-app/contracts/ExternalContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/ExternalContract.sol",
    "exportedSymbols": {
      "ExternalContract": [
        31
      ]
    },
    "id": 32,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExternalContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "57:143:0",
          "text": " Example of representation of any external stake-holding contract \n that receives stacked funds and then emits Complete(uint) event"
        },
        "fullyImplemented": true,
        "id": 31,
        "linearizedBaseContracts": [
          31
        ],
        "name": "ExternalContract",
        "nameLocation": "210:16:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "233:51:0",
              "text": "@notice Event to keep eye on process completion"
            },
            "eventSelector": "aaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7",
            "id": 7,
            "name": "Complete",
            "nameLocation": "295:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collectedAmount",
                  "nameLocation": "309:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "304:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "303:22:0"
            },
            "src": "289:37:0"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "449:41:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "473:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11,
                      "name": "Complete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "464:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "459:24:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "332:75:0",
              "text": "@notice Basic receive funds function\n @dev Emits Complete event "
            },
            "functionSelector": "522e1177",
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "complete",
            "nameLocation": "421:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:0:0"
            },
            "scope": 31,
            "src": "412:78:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "604:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 25,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExternalContract_$31",
                            "typeString": "contract ExternalContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ExternalContract_$31",
                            "typeString": "contract ExternalContract"
                          }
                        ],
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "621:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "621:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22,
                  "id": 28,
                  "nodeType": "Return",
                  "src": "614:28:0"
                }
              ]
            },
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "496:55:0",
              "text": "@notice Contract balance getter, test purposes only"
            },
            "functionSelector": "12065fe0",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "565:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:6:0"
            },
            "scope": 31,
            "src": "556:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 32,
        "src": "201:450:0",
        "usedErrors": []
      }
    ],
    "src": "32:619:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ExternalContract.sol",
    "exportedSymbols": {
      "ExternalContract": [
        31
      ]
    },
    "id": 32,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExternalContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "57:143:0",
          "text": " Example of representation of any external stake-holding contract \n that receives stacked funds and then emits Complete(uint) event"
        },
        "fullyImplemented": true,
        "id": 31,
        "linearizedBaseContracts": [
          31
        ],
        "name": "ExternalContract",
        "nameLocation": "210:16:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "233:51:0",
              "text": "@notice Event to keep eye on process completion"
            },
            "eventSelector": "aaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7",
            "id": 7,
            "name": "Complete",
            "nameLocation": "295:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collectedAmount",
                  "nameLocation": "309:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "304:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "303:22:0"
            },
            "src": "289:37:0"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "449:41:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "473:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11,
                      "name": "Complete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "464:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "459:24:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "332:75:0",
              "text": "@notice Basic receive funds function\n @dev Emits Complete event "
            },
            "functionSelector": "522e1177",
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "complete",
            "nameLocation": "421:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:0:0"
            },
            "scope": 31,
            "src": "412:78:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "604:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 25,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExternalContract_$31",
                            "typeString": "contract ExternalContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ExternalContract_$31",
                            "typeString": "contract ExternalContract"
                          }
                        ],
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "621:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "621:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22,
                  "id": 28,
                  "nodeType": "Return",
                  "src": "614:28:0"
                }
              ]
            },
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "496:55:0",
              "text": "@notice Contract balance getter, test purposes only"
            },
            "functionSelector": "12065fe0",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "565:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:6:0"
            },
            "scope": 31,
            "src": "556:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 32,
        "src": "201:450:0",
        "usedErrors": []
      }
    ],
    "src": "32:619:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-09T22:14:28.693Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "complete()": {
        "details": "Emits Complete event "
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Complete(uint256)": {
        "notice": "Event to keep eye on process completion"
      }
    },
    "kind": "user",
    "methods": {
      "complete()": {
        "notice": "Basic receive funds function"
      },
      "getBalance()": {
        "notice": "Contract balance getter, test purposes only"
      }
    },
    "notice": "Example of representation of any external stake-holding contract  that receives stacked funds and then emits Complete(uint) event",
    "version": 1
  }
}